<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.jboss.weld</groupId>
   <artifactId>weld-parent</artifactId>
   <packaging>pom</packaging>
   <version>42-SNAPSHOT</version>

   <name>Weld Parent</name>

   <!-- Full metadata -->

   <url>http://weld.cdi-spec.org</url>

   <description>
      The parent POM for Weld, specifying the build parameters
   </description>

   <licenses>
      <license>
         <name>Apache License, Version 2.0</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      </license>
   </licenses>

   <developers>
      <developer>
         <name>Weld committers</name>
      </developer>
   </developers>

   <properties>
      <!-- Force encoding to UTF-8 (bug on OS X) -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <pdf.name>${project.artifactId}.pdf</pdf.name>
      <minimum.maven.version>3.2.5</minimum.maven.version>

      <!--
      Options to override the compiler arguments directly on the compiler argument line to separate between what
      the IDE understands as the source level and what the Maven compiler actually use.
      -->
      <maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
      <maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>
      <maven.compiler.argument.testTarget>${maven.compiler.testTarget}</maven.compiler.argument.testTarget>
      <maven.compiler.argument.testSource>${maven.compiler.testSource}</maven.compiler.argument.testSource>

      <maven.compiler.testTarget>${maven.compiler.target}</maven.compiler.testTarget>
      <maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
      <jdk.min.version>${maven.compiler.argument.source}</jdk.min.version>
      <!-- Suppress strict JavaDoc validation -->
      <!-- http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html -->
      <javadoc.doclint>-Xdoclint:none</javadoc.doclint>

      <!-- This information is not entirely correct -->
      <!-- See also https://issues.jboss.org/browse/WELD-2016 -->
      <manifest.specification.title>JSR-346 Contexts and Dependency
         Injection for the Java EE platform</manifest.specification.title>
      <!-- This should be a sequence of nonnegative decimal integers separated
         by "." -->
      <manifest.specification.version>1.2</manifest.specification.version>

      <!-- dependency versions -->
      <build.config.version>13</build.config.version>
      <maven.scm.provider.gitexe>1.9.5</maven.scm.provider.gitexe>

      <!-- plugin versions -->
      <antrun.plugin.version>1.8</antrun.plugin.version>
      <archetype.plugin.version>3.2.0</archetype.plugin.version>
      <assembly.plugin.version>3.2.0</assembly.plugin.version>
      <build.helper.plugin.version>3.2.0</build.helper.plugin.version>
      <buildnumber.plugin.version>1.4</buildnumber.plugin.version>
      <bundle.plugin.version>4.2.1</bundle.plugin.version>
      <cargo.plugin.version>1.8.0</cargo.plugin.version>
      <checkstyle.plugin.version>3.1.1</checkstyle.plugin.version>
      <checkstyle.version>8.36</checkstyle.version>
      <clean.plugin.version>3.1.0</clean.plugin.version>
      <compiler.version>3.8.0-jboss-2</compiler.version>
      <dependency.plugin.version>3.1.2</dependency.plugin.version>
      <deploy.plugin.version>2.8.2</deploy.plugin.version>
      <ear.plugin.version>3.0.2</ear.plugin.version>
      <enforcer.plugin.version>3.0.0-M3</enforcer.plugin.version>
      <ejb.plugin.version>3.1.0</ejb.plugin.version>
      <exec.plugin.version>3.0.0</exec.plugin.version>
      <findbugs.plugin.version>3.0.5</findbugs.plugin.version>
      <gmavenplus.plugin.version>1.10.0</gmavenplus.plugin.version>
      <gpg.plugin.version>1.6</gpg.plugin.version>
      <install.plugin.version>2.5.2</install.plugin.version>
      <jar.plugin.version>3.2.0</jar.plugin.version>
      <javadoc.plugin.version>3.2.0</javadoc.plugin.version>
      <jboss.plugin.version>1.5.0</jboss.plugin.version>
      <jdocbook.plugin.version>2.3.10</jdocbook.plugin.version>
      <nexus.plugin.version>2.1</nexus.plugin.version>
      <release.version>2.5.3</release.version>
      <remote.resources.version>1.7.0</remote.resources.version>
      <resources.plugin.version>3.2.0</resources.plugin.version>
      <scm.plugin.version>1.11.2</scm.plugin.version>
      <selenium.plugin.version>2.3</selenium.plugin.version>
      <site.plugin.version>3.9.1</site.plugin.version>
      <shade.plugin.version>3.2.1</shade.plugin.version>
      <source.plugin.version>3.2.1</source.plugin.version>
      <surefire.version>2.19.1</surefire.version>
      <war.plugin.version>3.3.1</war.plugin.version>

      <!-- ***************** -->
      <!-- Repository Deployment URLs -->
      <!-- ***************** -->
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <ossrh.releases.repo.url>https://oss.sonatype.org/service/local/staging/deploy/maven2</ossrh.releases.repo.url>
      <ossrh.snapshots.repo.url>https://oss.sonatype.org/content/repositories/snapshots</ossrh.snapshots.repo.url>
      <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
   </properties>

   <prerequisites>
      <maven>3.6</maven>
   </prerequisites>


   <!-- Configure the build -->
   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <inherited>true</inherited>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <version>${remote.resources.version}</version>
            <executions>
               <execution>
                  <id>attach-license</id>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <inherited>true</inherited>
                  <configuration>
                     <resourceBundles>
                        <resourceBundle>org.jboss.weld:weld-license:1</resourceBundle>
                     </resourceBundles>
                  </configuration>
               </execution>
            </executions>
         </plugin>

      </plugins>
      <defaultGoal>package</defaultGoal>

      <!-- Configure all plugins, including versions to use in the build -->
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.jboss.maven.plugins</groupId>
               <artifactId>maven-jdocbook-plugin</artifactId>
               <version>${jdocbook.plugin.version}</version>
               <extensions>true</extensions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-antrun-plugin</artifactId>
               <version>${antrun.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <configuration>
                  <arguments>-Drelease -Dscm.plugin.version=${scm.plugin.version} -Dmaven.scm.provider.gitexe=${maven.scm.provider.gitexe}</arguments>
                  <autoVersionSubmodules>true</autoVersionSubmodules>
               </configuration>
               <version>${release.version}</version>
               <dependencies>
                  <dependency>
                     <groupId>org.apache.maven.scm</groupId>
                     <artifactId>maven-scm-provider-gitexe</artifactId>
                     <version>${maven.scm.provider.gitexe}</version>
                  </dependency>
               </dependencies>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-report-plugin</artifactId>
               <version>${surefire.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${surefire.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-clean-plugin</artifactId>
               <version>${clean.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>${deploy.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-assembly-plugin</artifactId>
               <version>${assembly.plugin.version}</version>
               <executions>
                  <execution>
                     <id>distribution</id>
                     <phase>package</phase>
                     <goals>
                        <goal>single</goal>
                     </goals>
                     <configuration>
                        <descriptors>
                           <descriptor>src/main/assembly/assembly.xml</descriptor>
                        </descriptors>
                        <finalName>${project.build.finalName}-${project.version}</finalName>
                     </configuration>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-install-plugin</artifactId>
               <version>${install.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-site-plugin</artifactId>
               <version>${site.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>${source.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-resources-plugin</artifactId>
               <version>${resources.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>${dependency.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>${javadoc.plugin.version}</version>
               <configuration>
                  <keywords>true</keywords>
                  <additionalOptions>
                     <additionalOption>${javadoc.doclint}</additionalOption>
                  </additionalOptions>
                  <source>8</source>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-gpg-plugin</artifactId>
               <version>${gpg.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>${bundle.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <version>${exec.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-enforcer-plugin</artifactId>
               <version>${enforcer.plugin.version}</version>
               <executions>
                  <execution>
                     <id>enforce-java-version</id>
                     <goals>
                        <goal>enforce</goal>
                     </goals>
                     <configuration>
                        <rules>
                           <requireJavaVersion>
                              <message>To build this project JDK ${jdk.min.version} (or greater) is required. Please install it.</message>
                              <version>${jdk.min.version}</version>
                           </requireJavaVersion>
                        </rules>
                     </configuration>
                  </execution>
                  <execution>
                     <id>enforce-maven-version</id>
                     <goals>
                        <goal>enforce</goal>
                     </goals>
                     <configuration>
                        <rules>
                           <requireMavenVersion>
                              <message>To build this project Maven ${minimum.maven.version} (or greater) is required. Please install it.</message>
                              <version>${minimum.maven.version}</version>
                           </requireMavenVersion>
                        </rules>
                     </configuration>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-shade-plugin</artifactId>
               <version>${shade.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>${compiler.version}</version>
               <configuration>
                  <source>${maven.compiler.source}</source>
                  <target>${maven.compiler.target}</target>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-jar-plugin</artifactId>
               <version>${jar.plugin.version}</version>
               <configuration>
                  <archive>
                     <manifestEntries>
                        <Implementation-Title>${project.name}</Implementation-Title>
                        <Implementation-Version>${parsedVersion.osgiVersion}</Implementation-Version>
                        <Specification-Title>${manifest.specification.title}</Specification-Title>
                        <Specification-Version>${manifest.specification.version}</Specification-Version>
                        <Maven-Version>${maven.version}</Maven-Version>
                        <Java-Version>${java.version}</Java-Version>
                        <Java-Vendor>${java.vendor}</Java-Vendor>
                        <Os-Name>${os.name}</Os-Name>
                        <Os-Arch>${os.arch}</Os-Arch>
                        <Os-Version>${os.version}</Os-Version>
                        <SCM>${buildNumber}</SCM>
                        <Build-Time>${maven.build.timestamp}</Build-Time>
                     </manifestEntries>
                  </archive>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <version>${build.helper.plugin.version}</version>
               <executions>
                  <execution>
                     <phase>validate</phase>
                     <goals>
                        <goal>maven-version</goal>
                        <goal>parse-version</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>buildnumber-maven-plugin</artifactId>
               <version>${buildnumber.plugin.version}</version>
               <executions>
                  <execution>
                     <id>set-build-properties</id>
                     <goals>
                        <goal>create</goal>
                     </goals>
                     <configuration>
                        <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        <revisionOnScmFailure>unavailable</revisionOnScmFailure>
                        <timestampFormat>{0, date, long} {0, time, long}</timestampFormat>
                     </configuration>
                  </execution>
               </executions>
               <inherited>true</inherited>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-war-plugin</artifactId>
               <version>${war.plugin.version}</version>
               <inherited>true</inherited>
               <configuration>
                  <failOnMissingWebXml>false</failOnMissingWebXml>
                  <warName>${project.build.finalName}</warName>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-ejb-plugin</artifactId>
               <version>${ejb.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-ear-plugin</artifactId>
               <version>${ear.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.sonatype.plugins</groupId>
               <artifactId>nexus-maven-plugin</artifactId>
               <version>${nexus.plugin.version}</version>
               <configuration>
                  <nexusUrl>https://repository.jboss.org/nexus</nexusUrl>
                  <serverAuthId>jboss-releases-repository</serverAuthId>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-archetype-plugin</artifactId>
               <version>${archetype.plugin.version}</version>
               <extensions>true</extensions>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>jboss-maven-plugin</artifactId>
               <version>${jboss.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>findbugs-maven-plugin</artifactId>
               <version>${findbugs.plugin.version}</version>
               <configuration>
                  <effort>Max</effort>
                  <threshold>Low</threshold>
                  <xmlOutput>true</xmlOutput>
                  <failOnError>false</failOnError>
               </configuration>
               <executions>
                  <execution>
                     <goals>
                        <goal>check</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.codehaus.cargo</groupId>
               <artifactId>cargo-maven2-plugin</artifactId>
               <version>${cargo.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>selenium-maven-plugin</artifactId>
               <version>${selenium.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-scm-plugin</artifactId>
               <version>${scm.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-checkstyle-plugin</artifactId>
               <version>${checkstyle.plugin.version}</version>
               <configuration>
                  <configLocation>weld-checkstyle/checkstyle.xml</configLocation>
                  <suppressionsLocation>weld-checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                  <consoleOutput>true</consoleOutput>
                  <failsOnError>true</failsOnError>
                  <useFile />
               </configuration>
               <dependencies>
                  <dependency>
                     <groupId>org.jboss.weld</groupId>
                     <artifactId>weld-common-build-config</artifactId>
                     <version>${build.config.version}</version>
                  </dependency>
                  <dependency>
                     <groupId>com.puppycrawl.tools</groupId>
                     <artifactId>checkstyle</artifactId>
                     <version>${checkstyle.version}</version>
                  </dependency>
               </dependencies>
               <executions>
                  <execution>
                     <id>check-style</id>
                     <phase>compile</phase>
                     <goals>
                        <goal>checkstyle</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus.plugin.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>release</id>
         <activation>
            <property>
               <name>release</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-gpg-plugin</artifactId>
                  <configuration>
                     <passphrase>${gpg.passphrase}</passphrase>
                     <useAgent>${gpg.useAgent}</useAgent>
                  </configuration>
                  <executions>
                     <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                           <goal>sign</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.sonatype.plugins</groupId>
                  <artifactId>nexus-maven-plugin</artifactId>
                  <configuration>
                     <auto>true</auto>
                     <description>[nexus-maven-plugin] closing
                        repository after release:perform</description>
                  </configuration>
               </plugin>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>buildnumber-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>validate-scm</id>
                        <goals>
                           <goal>create</goal>
                        </goals>
                        <!-- Disabled, doesn't support git -->
                        <phase>none</phase>
                        <configuration>
                           <doUpdate>true</doUpdate>
                           <doCheck>true</doCheck>
                        </configuration>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>distribution</id>
         <activation>
            <property>
               <name>dist</name>
            </property>
         </activation>
         <properties>
            <!-- Skip failing tests when building dist -->
            <maven.test.failure.ignore>true</maven.test.failure.ignore>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>javadoc</id>
                        <phase>package</phase>
                        <goals>
                           <goal>jar</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-deploy-plugin</artifactId>
                  <configuration>
                     <skip>${maven.deploy.skip}</skip>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>code-coverage</id>
         <activation>
            <property>
               <name>code-coverage</name>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-surefire-plugin</artifactId>
                     <inherited>true</inherited>
                     <configuration>
                        <forkCount>1</forkCount>
                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>
      <!-- JBoss release repository -->
      <profile>
         <id>jboss-release-repo</id>
         <activation>
            <activeByDefault>false</activeByDefault>
            <property>
               <name>jboss-release-repo</name>
               <value>true</value>
            </property>
         </activation>
         <distributionManagement>
            <repository>
               <id>jboss-releases-repository</id>
               <name>JBoss Releases Repository</name>
               <url>${jboss.releases.repo.url}</url>
            </repository>
            <snapshotRepository>
               <id>jboss-snapshots-repository</id>
               <name>JBoss Snapshots Repository</name>
               <url>${jboss.snapshots.repo.url}</url>
            </snapshotRepository>
         </distributionManagement>
      </profile>
      <!-- OSSRH release repository - selected by default -->
      <profile>
         <id>ossrh-release-repo</id>
         <activation>
            <activeByDefault>false</activeByDefault>
            <property>
               <name>!jboss-release-repo</name>
            </property>
         </activation>
         <distributionManagement>
            <snapshotRepository>
               <id>sonatype-nexus-snapshots</id>
               <name>Sonatype Nexus Snapshots</name>
               <url>${ossrh.snapshots.repo.url}</url>
            </snapshotRepository>
            <repository>
               <id>sonatype-nexus-staging</id>
               <name>Nexus Release Repository</name>
               <url>${ossrh.releases.repo.url}</url>
            </repository>
         </distributionManagement>
      </profile>

      <!-- Following are profiles dedicated to MR JAR builds and testing -->
      <!-- Taken from JBoss Parent POM, see https://github.com/jboss/jboss-parent-pom/blob/jboss-parent-36/pom.xml -->
      <profile>
         <id>compile-java8-release-flag</id>
         <activation>
            <file>
               <exists>${basedir}/build-release-8</exists>
            </file>
            <jdk>[9,)</jdk>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>8</release>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 9 or later is used to test a project that supports Java 8 -->
      <profile>
         <id>java8-test</id>
         <activation>
            <jdk>[9,)</jdk>
            <property>
               <name>java8.home</name>
            </property>
            <file>
               <exists>${basedir}/build-test-java8</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>java8-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <jvm>${java8.home}/bin/java</jvm>
                           <additionalClasspathElements>
                              <additionalClasspathElement>${java8.home}/lib/tools.jar</additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 9 or later is used to build -->
      <profile>
         <id>java9-mr-build</id>
         <activation>
            <jdk>[9,)</jdk>
            <file>
               <exists>${basedir}/src/main/java9</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>compile-java9</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>9</release>
                           <buildDirectory>${project.build.directory}</buildDirectory>
                           <compileSourceRoots>${project.basedir}/src/main/java9</compileSourceRoots>
                           <outputDirectory>${project.build.directory}/classes/META-INF/versions/9
                           </outputDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <archive>
                        <manifestEntries>
                           <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                     </archive>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 10 or later is used to test a project that supports Java 9 -->
      <profile>
         <id>java9-test</id>
         <activation>
            <jdk>[10,)</jdk>
            <property>
               <name>java9.home</name>
            </property>
            <file>
               <exists>${basedir}/build-test-java9</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>java9-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <jvm>${java9.home}/bin/java</jvm>
                           <classesDirectory>${project.build.directory}/classes/META-INF/versions/9
                           </classesDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 10 or later is used to build -->
      <profile>
         <id>java10-mr-build</id>
         <activation>
            <jdk>[10,)</jdk>
            <file>
               <exists>${basedir}/src/main/java10</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>compile-java10</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>10</release>
                           <buildDirectory>${project.build.directory}</buildDirectory>
                           <compileSourceRoots>${project.basedir}/src/main/java10</compileSourceRoots>
                           <outputDirectory>${project.build.directory}/classes/META-INF/versions/10
                           </outputDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <archive>
                        <manifestEntries>
                           <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                     </archive>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 11 or later is used to test a project that supports Java 10 -->
      <profile>
         <id>java10-test</id>
         <activation>
            <jdk>[11,)</jdk>
            <property>
               <name>java10.home</name>
            </property>
            <file>
               <exists>${basedir}/build-test-java10</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>java10-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <jvm>${java10.home}/bin/java</jvm>
                           <classesDirectory>${project.build.directory}/classes/META-INF/versions/10
                           </classesDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 11 or later is used to build -->
      <profile>
         <id>java11-mr-build</id>
         <activation>
            <jdk>[11,)</jdk>
            <file>
               <exists>${basedir}/src/main/java11</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>compile-java11</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>11</release>
                           <buildDirectory>${project.build.directory}</buildDirectory>
                           <compileSourceRoots>${project.basedir}/src/main/java11</compileSourceRoots>
                           <outputDirectory>${project.build.directory}/classes/META-INF/versions/11
                           </outputDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/10
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <archive>
                        <manifestEntries>
                           <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                     </archive>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 12 or later is used to test a project that supports Java 11 -->
      <profile>
         <id>java11-test</id>
         <activation>
            <jdk>[12,)</jdk>
            <property>
               <name>java11.home</name>
            </property>
            <file>
               <exists>${basedir}/build-test-java11</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>java11-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <jvm>${java11.home}/bin/java</jvm>
                           <classesDirectory>${project.build.directory}/classes/META-INF/versions/11
                           </classesDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/10
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 12 or later is used to build -->
      <profile>
         <id>java12-mr-build</id>
         <activation>
            <jdk>[12,)</jdk>
            <file>
               <exists>${basedir}/src/main/java12</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>compile-java12</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>12</release>
                           <buildDirectory>${project.build.directory}</buildDirectory>
                           <compileSourceRoots>${project.basedir}/src/main/java12</compileSourceRoots>
                           <outputDirectory>${project.build.directory}/classes/META-INF/versions/12
                           </outputDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/11
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/10
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <archive>
                        <manifestEntries>
                           <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                     </archive>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 13 or later is used to test a project that supports Java 12 -->
      <profile>
         <id>java12-test</id>
         <activation>
            <jdk>[13,)</jdk>
            <property>
               <name>java12.home</name>
            </property>
            <file>
               <exists>${basedir}/build-test-java12</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>java12-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <jvm>${java12.home}/bin/java</jvm>
                           <classesDirectory>${project.build.directory}/classes/META-INF/versions/12
                           </classesDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/11
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/10
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- This profile is activated when Java 13 or later is used to build -->
      <profile>
         <id>java13-mr-build</id>
         <activation>
            <jdk>[13,)</jdk>
            <file>
               <exists>${basedir}/src/main/java13</exists>
            </file>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-compiler-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>compile-java13</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>compile</goal>
                        </goals>
                        <configuration>
                           <release>12</release>
                           <buildDirectory>${project.build.directory}</buildDirectory>
                           <compileSourceRoots>${project.basedir}/src/main/java13</compileSourceRoots>
                           <outputDirectory>${project.build.directory}/classes/META-INF/versions/13
                           </outputDirectory>
                           <additionalClasspathElements>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/12
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/11
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/10
                              </additionalClasspathElement>
                              <additionalClasspathElement>
                                 ${project.build.directory}/classes/META-INF/versions/9
                              </additionalClasspathElement>
                              <additionalClasspathElement>${project.build.outputDirectory}
                              </additionalClasspathElement>
                           </additionalClasspathElements>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <archive>
                        <manifestEntries>
                           <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                     </archive>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>

   <!-- SCM and Distribution Management -->
   <scm>
      <connection>scm:git:git@github.com:weld/parent.git</connection>
      <developerConnection>scm:git:git@github.com:weld/parent.git</developerConnection>
      <url>scm:git:git@github.com:weld/parent.git</url>
      <tag>HEAD</tag>
   </scm>

</project>
